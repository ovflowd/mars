group 'nasa'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'org.junit.platform.gradle.plugin'
apply plugin: 'jacoco'
apply from: 'docker.gradle'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()
}

bootRepackage {
    mainClass = 'nasa.mars.hover.Boot'
}

jar {
    baseName = 'gs-spring-boot'
    version =  '0.1.0'
}

springBoot {
    mainClass = 'nasa.mars.hover.Boot'
}

dependencies {
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web'

    testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test'

    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.0.2'
    testRuntime group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.0.2'

    testCompile group: 'org.junit.platform', name: 'junit-platform-runner', version: '1.0.2'
    testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-web'
}

buildscript {
    repositories {
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }
    dependencies {
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:1.5.9.RELEASE'
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.2'
    }
}

sourceSets {
    test {
        java.srcDirs = ['src/test']
    }
    main {
        java.srcDirs = ['src/main']
    }
}

junitPlatform {
    details 'tree'
}

configurations {
    integrationCompile.extendsFrom testCompile
    integrationRuntime.extendsFrom testRuntime
}

task codeCoverageReport(type: JacocoReport) {
    executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")

    subprojects.each {
        sourceSets it.sourceSets.main
    }

    reports {
        xml.enabled true
        xml.setDestination("${buildDir}/reports/jacoco/report.xml")
        html.enabled false
        csv.enabled false
    }
}

codeCoverageReport.dependsOn {
    subprojects*.test
}